import './recipeDisplay.css';

interface RecipeDisplayProps {
  title: string;
  description: string;
  image: string;
  tags: string[];
  ingredients: string[];
  cookingTime: number;
  servings: number;
  instructions: string;
}

const RecipeDisplay = ({
  title,
  description,
  image,
  tags,
  ingredients,
  cookingTime,
  servings,
  instructions,
}: RecipeDisplayProps) => {
  return (
    <div className="recipeDisplayContainer">
      <h1 className="recipeDisplayTitle">{title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}</h1>
      <p className="recipeDisplayDescription">
        {description || '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}
      </p>
      {image && <img className="recipeDisplayImage" src={image} alt={title} />}

      <div className="recipeDisplayTags">
        {tags.length > 0 ? (
          tags.map((tag) => (
            <span key={tag} className="recipeDisplayTag">
              {tag}
            </span>
          ))
        ) : (
          <span className="recipeDisplayTag">–ë–µ–∑ —Ç–µ–≥–æ–≤</span>
        )}
      </div>

      <h2 className="recipeDisplaySectionTitle">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h2>
      <ul className="recipeDisplayList">
        {ingredients.length > 0 ? (
          ingredients.map((item, index) => <li key={index}>{item}</li>)
        ) : (
          <li>–ù–µ—Ç –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤</li>
        )}
      </ul>

      <h2 className="recipeDisplaySectionTitle">–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</h2>
      <p className="recipeDisplayInstructions">
        {instructions || '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
      </p>

      <h2 className="recipeDisplaySectionTitle">–í—Ä–µ–º—è –∏ –ø–æ—Ä—Ü–∏–∏</h2>
      <div className="recipeDisplayInstructions">
        ‚è± –í—Ä–µ–º—è: {cookingTime > 0 ? `${cookingTime} –º–∏–Ω` : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} <br />
        üçΩ –ü–æ—Ä—Ü–∏–π: {servings > 0 ? servings : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
      </div>
    </div>
  );
};

export default RecipeDisplay;
